/*
 * app.c
 *
 *  Created on: ??þ/??þ/????
 *      Author: ASHRY
 */
#include "stm32f4xx_hal.h"
#include "../HAL/ultraSonic/ultraSonic.h"
#include "./app.h"

// define timer handlers
TIM_HandleTypeDef htim2 = {0};
TIM_HandleTypeDef htim3 = {0};
TIM_HandleTypeDef htim4 = {0};
TIM_HandleTypeDef htim5 = {0};
// ultraSonic structs to initialize sensors to its pins and timers
ultraSonicInitTypeDef FRONT_ultraSonic = {
		.GPIOxTrigger = GPIOA,
		.GPIOxEcho = GPIOA,
		.GPIOxTriggerPin = GPIO_PIN_3,
		.GPIOxEchoPin = GPIO_PIN_6,
		.GPIOxTriggerPinAF = GPIO_AF1_TIM2,
		.GPIOxEchoPinAF = GPIO_AF2_TIM3,
		.TIMxTrigger = TIM2,
		.TIMxEcho = TIM3,
		.htimTrigger = &htim2,
		.htimEcho = &htim3,
		.TIMxTrigger_Channel = TIM_CHANNEL_4,
		.EchoIRQ = TIM3_IRQn,
};

ultraSonicInitTypeDef LHS_ultraSonic = {
		.GPIOxTrigger = GPIOB,
		.GPIOxEcho = GPIOB,
		.GPIOxTriggerPin = GPIO_PIN_3,
		.GPIOxEchoPin = GPIO_PIN_6,
		.GPIOxTriggerPinAF = GPIO_AF1_TIM2,
		.GPIOxEchoPinAF = GPIO_AF2_TIM4,
		.TIMxTrigger = TIM2,
		.TIMxEcho = TIM4,
		.htimTrigger = &htim2,
		.htimEcho = &htim4,
		.TIMxTrigger_Channel = TIM_CHANNEL_2,
		.EchoIRQ = TIM4_IRQn,
};

ultraSonicInitTypeDef RHS_ultraSonic = {
		.GPIOxTrigger = GPIOB,
		.GPIOxEcho = GPIOA,
		.GPIOxTriggerPin = GPIO_PIN_10,
		.GPIOxEchoPin = GPIO_PIN_0,
		.GPIOxTriggerPinAF = GPIO_AF1_TIM2,
		.GPIOxEchoPinAF = GPIO_AF2_TIM5,
		.TIMxTrigger = TIM2,
		.TIMxEcho = TIM5,
		.htimTrigger = &htim2,
		.htimEcho = &htim5,
		.TIMxTrigger_Channel = TIM_CHANNEL_3,
		.EchoIRQ = TIM5_IRQn,
};

// define variables for ultraSonic capture unit handlers
uint32_t LHS_firstCap = 0	, LHS_secondCap = 0,
		 RHS_firstCap = 0	, RHS_secondCap = 0,
		 FRONT_firstCap = 0	, FRONT_secondCap = 0;
uint8_t  LHS_flag = 0, RHS_flag = 0, FRONT_flag = 0;
float f=0, l=0, r=0;

//input capture unit handlers
void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
    if (htim->Instance == TIM3) {
        ultraSonicInputCaptureHandler(&htim3,&FRONT_firstCap,&FRONT_secondCap,&f,&FRONT_flag);
        HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_4);
    }else if (htim->Instance == TIM4){
        ultraSonicInputCaptureHandler(&htim4,&LHS_firstCap,&LHS_secondCap,&l,&LHS_flag);
    }else if (htim->Instance == TIM5){
        ultraSonicInputCaptureHandler(&htim5,&RHS_firstCap,&RHS_secondCap,&r,&RHS_flag);
        HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
    }
}

void perceptionVidInit(void){

	//init sensors
	ultraSonicVidInit(&LHS_ultraSonic);
	ultraSonicVidInit(&RHS_ultraSonic);
	ultraSonicVidInit(&FRONT_ultraSonic);
	//start sensing
	ultraSonicVidStart(&FRONT_ultraSonic);
	ultraSonicVidStart(&LHS_ultraSonic);
	ultraSonicVidStart(&RHS_ultraSonic);
}
