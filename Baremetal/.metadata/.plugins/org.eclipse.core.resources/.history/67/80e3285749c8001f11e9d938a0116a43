#ifndef __HAL_ULTRASONIC__
#define __HAL_ULTRASONIC__

#define SOUND_SPEED  				340
#define TIMER_FREQUENCY 			84000000 			//84 MHz
#define TRIGGER_FREQUENCY 			25		 			//25Hz
#define TICK_FREQUENCY 				1000000  			//1MHz
#define PWM_HIGH_TIME				0.00001	 			//10us
#define PWM_FULL_TIME				0.04     			//40ms
#define GET_PSC()					(uint16_t)(((TIMER_FREQUENCY)/(TICK_FREQUENCY))-1)
#define GET_ARR()   				(uint16_t)(((PWM_HIGH_TIME)*(TICK_FREQUENCY))-1)
#define GET_RESET_VALUE()			(uint32_t)(((PWM_FULL_TIME)*(TICK_FREQUENCY))-1)
#define TRIGGER_CHANNEL_1 			TIM_Channel_1
#define TRIGGER_CHANNEL_2 			TIM_Channel_2
#define TRIGGER_CHANNEL_3 			TIM_Channel_3
#define TRIGGER_CHANNEL_4 			TIM_Channel_4
#define ECHO_CHANNEL 				TIM_Channel_1
typedef struct{
	GPIO_TypeDef* GPIOxTrigger;
	GPIO_TypeDef* GPIOxEcho;
	TIM_TypeDef*  TIMxTrigger;
	TIM_TypeDef*  TIMxEcho;
	uint32_t GPIOxTriggerPin;
	uint32_t GPIOxEchoPin;
	uint8_t  GPIOxTriggerPinAF;
	uint8_t  GPIOxEchoPinAF;
	uint16_t TIMxTrigger_Channel;
	uint16_t TIMxEcho_Channel;
	IRQn_Type EchoIRQ;
}ultraSonicInitTypeDef;


void ultraSonicVidInit(ultraSonicInitTypeDef*);
void ultraSonicVidStart(ultraSonicInitTypeDef*);
void ultraSonicInputCaptureHandler(TIM_TypeDef*,uint16_t*,uint16_t*,float*);
float ultraSonicFloatGetDistance(uint16_t*,uint16_t*);


#endif
